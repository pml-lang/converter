service PML_tokenizer_config_default_values

    attributes type:character
        
//        node_start_symbol = '{'
//        node_end_symbol = '}'
        node_start_symbol = '['
        node_end_symbol = ']'

        attributes_start_symbol = '('
        attributes_end_symbol = ')'
        attribute_assignment_symbol = '='
    .

    attributes type:string
        
//        comment_start = "{-"
//        comment_end   = "-}"
        comment_start = get_comment_start ( node_start_symbol )
        comment_end   = get_comment_end ( node_end_symbol )

//        insert_file_start = \
//            """{{a_node_start_symbol}}{{se_PML_insert_formal_node.node.standard_tag}} """
        insert_file_start = get_insert_file_start ( node_start_symbol )
    .

    attributes type:regex

//        node_tag = regex.create ( "[^ \t\r\n{}:]+" )
        node_tag = get_node_tag_regex ( node_start_symbol, node_end_symbol )
        
        attribute_id = regex.create ( '''[a-zA-Z][a-zA-Z0-9_]*''' )
        attribute_id_and_assignment_symbol = regex.create ( '''([a-zA-Z][a-zA-Z0-9_]*)[ \t]*=''' )
        
        attribute_id_value_separator = regex.create ( '''[ \t]*=[ \t]*''' )
        
        quoted_attribute_value = regex.create ( '''"[^\r\n]*?[^\\]"''' )
//        unquoted_attribute_value = regex.create ( '''(\\\{|\\\}|\\\=|[^\r\n{}=])+[^\\\r\n{}=]''' )
        unquoted_attribute_value = get_unquoted_attribute_value_regex ( node_start_symbol, node_end_symbol )

        any_char_and_space_and_attribute_id_and_assignment_symbol = \
            regex.create ( """([^\r\n]*?)([ \t]+)({{a_attribute_id_and_assignment_symbol}})""" )

//        text_end = regex.create ( '''[^\\][\{\}]''' )
        text_end = get_text_end_regex ( node_start_symbol, node_end_symbol )
    
//        comment_snippet_end = regex.create ( '''(-\})|(\{-)''' )
        comment_snippet_end = get_comment_snippet_end_regex ( node_start_symbol, node_end_symbol )

        line_continuation = regex.create ( '''[ \t]*\\\r?\n''' )
        
        whitespace = regex.create ( '''[ \t\r\n]+''' )
    .

    function get_comment_start ( node_start_symbol character ) -> string = \
        """{{i_node_start_symbol}}-"""
    
    function get_comment_end ( node_end_symbol character ) -> string = \
        """-{{i_node_end_symbol}}"""

    function get_insert_file_start ( node_start_symbol character ) -> string = \
        """{{i_node_start_symbol}}{{se_PML_insert_formal_node.node.standard_tag}} """

    function get_node_tag_regex ( node_start_symbol character, node_end_symbol character ) -> regex = \
        regex.create ( """[^ \t\r\n\{{i_node_start_symbol}}\{{i_node_end_symbol}}:]+""" )

    function get_unquoted_attribute_value_regex ( node_start_symbol character, node_end_symbol character ) -> regex = \
        regex.create ( """(\\\{{i_node_start_symbol}}|\\\{{i_node_end_symbol}}|\\\=|[^\r\n\{{i_node_start_symbol}}\{{i_node_end_symbol}}=])+[^\\\r\n\{{i_node_start_symbol}}\{{i_node_end_symbol}}=]""" )

    function get_text_end_regex ( node_start_symbol character, node_end_symbol character ) -> regex = \
        regex.create ( """[^\\][\{{i_node_start_symbol}}\{{i_node_end_symbol}}]""" )

    function get_comment_snippet_end_regex ( node_start_symbol character, node_end_symbol character ) -> regex = \
        regex.create ( """(-\{{i_node_end_symbol}})|(\{{i_node_start_symbol}}-)""" )
.
