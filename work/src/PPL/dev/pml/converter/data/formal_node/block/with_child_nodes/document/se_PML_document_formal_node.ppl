// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

service PML_document_formal_node

    att attributes formal_parameters<*>
        default
            const r = any_type_formal_parameters_builder.create

            r.add_string_parameter (
                ids = [# se_PML_attribute_ids.title ]
                title = "Document Title"
                examples = "title = A Blissful Experience" )

            r.add_string_or_null_parameter (
                ids = [# "author", "authors" ]
                default_value_supplier = { null }
                title = "Document Author(s)"
                description = "A comma-separated list of authors."
                examples = "authors = Albert Einstein, Isaac Newton" )

            r.add<local_date or null> (
                ids = [# "date" ]
                default_value_supplier = { null }
                value_parser = { string => local_date.try_parse ( string ) }
                title = "Publication Date"
                description = "The date the document has been published, in ISO format (yyyy-mm-dd)."
                examples = "date = 2018-12-01" )

            r.add<local_time or null> (
                ids = [# "time" ]
                default_value_supplier = { null }
                value_parser = { string => local_time.try_parse ( string ) }
                title = "Publication Time"
                description = "The time the document has been published, in ISO format (hh:mm)."
                examples = "time = 10:15" )

            r.add_string_or_null_parameter (
                ids = [# "TOC_title" ]
                default_value_supplier = { ty_PML_document_node.TOC_title.default },
                title = "TOC Title"
                description = "The title of the table of contents.",
                examples = "TOC_title = Contents" )

            r.add<PML_TOC_position> (
                ids = [# "TOC_position" ]
                default_value_supplier = { ty_PML_document_node.TOC_position.default },
                value_parser = { string ->
                    case value of string
                        when "left"
                            return PML_TOC_position.left
                        when "top"
                            return PML_TOC_position.top
                        when "none"
                            return PML_TOC_position.none
                        otherwise
                            return parse_object_error<PML_TOC_position>.create (
                                info = """'{{i_string}}' is an invalid position for Table of Contents. Valid values are: left, top, and none."""
                                data = i_string )
                    .
                },
                title = "TOC Position",
                description = "The position of the table of contents ('left', 'top', or 'none').",
                examples = "top" )

            r.add<PML_source_code_highlighter or null> (
                ids = [# "source_code_highlighter", "highlighter" ]
                default_value_supplier = { null },
                value_parser = { string ->
                    case value of string.to_lower_case
                        when "none"
                            return PML_source_code_highlighter.none
                        when "highlightjs"
                            return PML_source_code_highlighter.highlightjs
                        when "prism"
                            return PML_source_code_highlighter.prism
                        otherwise
                            return parse_object_error<PML_source_code_highlighter>.create (
                                info = """'{{i_string}}' is an invalid value for 'source_code_highlighter'. Valid values are: 'highlightjs', 'prism' and 'none'."""
                                data = i_string )
                    .
                },
                title = "Source Code Syntax Highlighter",
                description = "The name of the syntax highlighter used to highlight source code. Currently supported values are 'highlightjs', 'prism' and 'none'. Default is 'none', which means that source code highlighting is disabled.",
                examples = "highlighter = none" )

            return r.make_immutable
        .
    .

    att node PML_formal_block_node_with_child_nodes<PML_document_node> = \
        PML_formal_block_node_with_child_nodes<PML_document_node>.create (
            tags = [# "document", "doc", "==" ]
            attributes = a_attributes
            default_attribute_id = parameter_id.create ( se_PML_attribute_ids.title )
            HTML_attributes_allowed = yes
            node_creator = PML_document_node_creator.create
            HTML_writer = PML_document_node_HTML_writer.create
            documentation = simple_documentation.create (
                title = "Document"
                description = "Every PML document must start with a 'document' node. It is the root node of the document."
                examples = '''[doc title = A Nice Surprise \
    author = Giovanni Spiridigliotsky \
    date = 2018-11-30

    blah blah blah
]''' ) )
.
